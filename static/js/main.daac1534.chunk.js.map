{"version":3,"sources":["p2-homeworks/h1/HW1.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.css"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","speechBubble","postBlock","name","text","time","messageData","HW1","title","Affair","wrapper","affair","priority","delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","notError","value","onChange","onKeyDown","button","disabled","errorText","GreetingContainer","users","addUserCallback","setName","setError","alert","length","event","inputName","currentTarget","trim","key","HW3","setUsers","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.daac1534.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HW1_title__pxSCa\"};","import React from 'react'\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n\tavatar: string\n\tname: string\n\tmessage: string\n\ttime: string\n}\n\nexport const Message = (props: MessagePropsType) => {\n\treturn (\n\t\t<div className={s.message}>\n\t\t\t<img src={props.avatar} alt='post ava'/>\n\t\t\t<div className={s.speechBubble}/>\n\t\t\t<div className={s.postBlock}>\n\t\t\t\t<h3 className={s.name}>{props.name}</h3>\n\t\t\t\t<div className={s.text}>{props.message}</div>\n\t\t\t\t<div className={s.time}>{props.time}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\n","import React from 'react'\nimport {Message} from \"./Message\";\nimport s from './HW1.module.css';\n\nconst messageData = {\n\tavatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n\tname: 'Some Name',\n\tmessage: \"some text\",\n\ttime: '22:00',\n}\n\nfunction HW1() {\n\treturn (\n\t\t<div>\n\t\t\t<hr/>\n\t\t\t<div className={s.title}>homeworks 1</div>\n\n\t\t\t{/*should work (должно работать)*/}\n\n\t\t\t<Message\n\t\t\t\tavatar={messageData.avatar}\n\t\t\t\tname={messageData.name}\n\t\t\t\tmessage={messageData.message}\n\t\t\t\ttime={messageData.time}\n\t\t\t/>\n\n\t\t\t<hr/>\n\t\t\t{/*для личного творчества, могу проверить*/}\n\t\t\t{/*<AlternativeMessage/>*/}\n\t\t\t<hr/>\n\t\t</div>\n\t)\n}\n\nexport default HW1\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\n\r\ntype AffairPropsType = {\r\n\taffair: AffairType\r\n\tdeleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\tconst deleteCallback = () => {\r\n\t\tprops.deleteAffairCallback(props.affair._id)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<span className={s.name}>{props.affair.name}</span>\r\n\t\t\t<span className={s[props.affair.priority]}>{props.affair.priority}</span>\r\n\t\t\t<button className={s.delete} onClick={deleteCallback}>X</button>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = {\n\tdata: Array<AffairType>\n\tsetFilter: (filter: (FilterType)) => void\n\tdeleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\tconst mappedAffairs = props.data.map((a: AffairType) => (\n\t\t<Affair // should work\n\t\t\tkey={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n\t\t\taffair={a}\n\t\t\tdeleteAffairCallback={props.deleteAffairCallback}\n\t\t/>\n\t))\n\n\tconst setAll = () => {\n\t\tprops.setFilter('all')\n\t}\n\tconst setHigh = () => {\n\t\tprops.setFilter('high')\n\t}\n\tconst setMiddle = () => {\n\t\tprops.setFilter('middle')\n\t}\n\tconst setLow = () => {\n\t\tprops.setFilter('low')\n\t}\n\n\treturn (\n\t\t<div>\n\n\t\t\t{mappedAffairs}\n\n\t\t\t<button onClick={setAll}>All</button>\n\t\t\t<button onClick={setHigh}>High</button>\n\t\t\t<button onClick={setMiddle}>Middle</button>\n\t\t\t<button onClick={setLow}>Low</button>\n\t\t</div>\n\t)\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = {\n\t_id: number\n\tname: string\n\tpriority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n\t{_id: 1, name: 'React', priority: 'high'},\n\t{_id: 2, name: 'anime', priority: 'low'},\n\t{_id: 3, name: 'games', priority: 'low'},\n\t{_id: 4, name: 'work', priority: 'high'},\n\t{_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n\tif (filter === 'all') return affairs\n\tif (filter === 'high') return affairs.filter(f => f.priority === \"high\")\n\tif (filter === 'middle') return affairs.filter(f => f.priority === \"middle\")\n\tif (filter === 'low') return affairs.filter(f => f.priority === \"low\")\n\telse return affairs\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n\treturn affairs.filter(f => f._id !== _id)\n}\n\nfunction HW2() {\n\tconst [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n\tconst [filter, setFilter] = useState<FilterType>('all')\n\n\tconst filteredAffairs = filterAffairs(affairs, filter)\n\tconst deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n\treturn (\n\t\t<div>\n\t\t\t<hr/>\n\t\t\thomeworks 2\n\n\t\t\t{/*should work (должно работать)*/}\n\t\t\t<Affairs\n\t\t\t\tdata={filteredAffairs}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\tdeleteAffairCallback={deleteAffairCallback}\n\t\t\t/>\n\n\t\t\t<hr/>\n\t\t\t{/*для личного творчества, могу проверить*/}\n\t\t\t{/*<AlternativeAffairs/>*/}\n\t\t\t<hr/>\n\t\t</div>\n\t)\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (event:ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n\tonEnter: (event:KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error? s.error : s.notError\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} onKeyDown={onEnter}  className={inputClass }/>\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <span>{totalUsers}</span>\n\t\t\t<div>\n\t\t\t\t<span className={s.errorText}>{error}</span>\n\t\t\t</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name:string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n\n\n    const setNameCallback = (event:ChangeEvent<HTMLInputElement> ) => {\n\t\tconst inputName = event.currentTarget.value.trim();\n\t\tif (inputName) {\n\t\t\tsetName(inputName)\n\t\t\tsetError('')\n\t\t}\n\t\telse {\n\t\t\tsetName('')\n\t\t\tsetError('name is required!')\n\t\t}\n\n    }\n    const addUser = () => {\n\t\taddUserCallback(name)\n\t\tsetName('')\n        alert(`Hello ${name}!`)\n    }\n\n\tconst onEnter = (event:KeyboardEvent<HTMLInputElement>) => {\n\tif(event.key === 'Enter' && name) addUser()\n\t}\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n\t\t\tonEnter = {onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])\n\n    const addUserCallback = (name: string) => {\n        setUsers([...users, {_id:v1(), name:name}])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\n\nfunction App() {\n\treturn (\n\t\t<div className={s.App}>\n\t\t\t<div className={s.title}>react homeworks:</div>\n\t\t\t<HW1/>\n\t\t\t<HW2/>\n\t\t\t<HW3/>\n\t\t\t{/*<HW4/>*/}\n\t\t\t{/*<HW5/>*/}\n\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__5G4bT\",\"wrapper\":\"Message_wrapper__118Ds\",\"postBlock\":\"Message_postBlock__30tU8\",\"name\":\"Message_name__2qIEx\",\"text\":\"Message_text__3JNGV\",\"time\":\"Message_time__cnuBn\",\"speechBubble\":\"Message_speechBubble__f9fnY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__1iD_J\",\"name\":\"Affairs_name__3X8Os\",\"high\":\"Affairs_high__2iJYk\",\"middle\":\"Affairs_middle__3RrxF\",\"low\":\"Affairs_low__Y6yOy\",\"delete\":\"Affairs_delete__3k6RZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1w_Ip\",\"error\":\"Greeting_error__3AVlK\",\"notError\":\"Greeting_notError__2VEnZ\",\"errorText\":\"Greeting_errorText__O5GG_\",\"inputClass\":\"Greeting_inputClass__2Os_a\",\"button\":\"Greeting_button__Vbozr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__36cEi\",\"title\":\"App_title__1Kmyv\"};"],"sourceRoot":""}